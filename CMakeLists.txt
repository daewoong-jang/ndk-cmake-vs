cmake_minimum_required(VERSION 3.3.2)

project(hello-jni)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}")

set(BUILD_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${BUILD_OUTPUT_DIRECTORY}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${BUILD_OUTPUT_DIRECTORY}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${BUILD_OUTPUT_DIRECTORY}/bin)

foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
    string(TOUPPER ${OUTPUTCONFIG} CONFIG)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${CONFIG} "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${CONFIG} "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${CONFIG} "${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
endforeach()

set(BUILD_OBJECT_DIRECTORY ${CMAKE_BINARY_DIR}/HelloJni.dir/$<CONFIG>)

set(CMAKE_ANDROID_API_MIN 14)

add_subdirectory(jni)

set(HELLOJNI_SOURCES
    AndroidManifest.xml
    src/com/example/hellojni/HelloJni.java
    stub.cpp
)
set_source_files_properties(stub.cpp PROPERTIES HEADER_FILE_ONLY TRUE)

set(CMAKE_ANDROID_GUI TRUE)
add_executable(HelloJni ${HELLOJNI_SOURCES})

add_dependencies(HelloJni hello-jni)
add_custom_command(TARGET HelloJni PRE_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libhello-jni.so ${BUILD_OBJECT_DIRECTORY}/libs/${ANDROID_NDK_ABI_NAME}/libhello-jni.so)
